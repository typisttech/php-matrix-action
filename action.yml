name: PHP Matrix
description: Generate PHP version matrix according to `composer.json`

author: Typist Tech Limited
branding:
  icon: grid
  color: black

inputs:
  composer-json:
    description: Path to composer.json
    default: composer.json

  mode:
    description: Version format
    default: minor-only

  source:
    description: Source of releases information
    default: auto

  version:
    description: |
      The version of php-matrix to use. Leave blank for latest. For example: v1.0.2
    default: ''

  verify-attestation:
    description: Whether to verify PHP matrix tarball attestation
    default: true

  github-token:
    description: GitHub token to use for authentication
    default: ${{ github.token }}

outputs:
  constraint:
    description: The `require.php` constraint found in `composer.json`
    value: ${{ fromJSON(steps.generate-matrix.outputs.matrix).constraint }}
  highest:
    description: Highest supported PHP versions
    value: ${{ fromJSON(steps.generate-matrix.outputs.matrix).highest }}
  lowest:
    description: Lowest supported PHP versions
    value: ${{ fromJSON(steps.generate-matrix.outputs.matrix).lowest }}
  versions:
    description: Array of all supported PHP versions
    value: ${{ toJSON(fromJSON(steps.generate-matrix.outputs.matrix).versions) }}

runs:
  using: "composite"
  steps:
    - name: Download PHP Matrix (Linux arm64)
      if: ${{ runner.os == 'Linux' && runner.arch == 'ARM64' }}
      run: gh release download --repo typisttech/php-matrix --output php-matrix.tar.gz --pattern "${PATTERN}" "${TAG}"
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        PATTERN: php-matrix_linux_arm64.tar.gz
        TAG: ${{ inputs.version }}
        GH_TOKEN: ${{ inputs.github-token }}

    - name: Download PHP Matrix (Linux amd64)
      if: ${{ runner.os == 'Linux' && runner.arch == 'x64' }}
      run: gh release download --repo typisttech/php-matrix --output php-matrix.tar.gz --pattern "${PATTERN}" "${TAG}"
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        PATTERN: php-matrix_linux_amd64.tar.gz
        TAG: ${{ inputs.version }}
        GH_TOKEN: ${{ github.token }}

    - name: Download PHP Matrix (Darwin arm64)
      if: ${{ runner.os == 'macOS' && runner.arch == 'ARM64' }}
      run: gh release download --repo typisttech/php-matrix --output php-matrix.tar.gz --pattern "${PATTERN}" "${TAG}"
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        PATTERN: php-matrix_darwin_arm64.tar.gz
        TAG: ${{ inputs.version }}
        GH_TOKEN: ${{ inputs.github-token }}

    - name: Download PHP Matrix (Darwin amd64)
      if: ${{ runner.os == 'macOS' && runner.arch == 'x64' }}
      run: gh release download --repo typisttech/php-matrix --output php-matrix.tar.gz --pattern "${PATTERN}" "${TAG}"
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        PATTERN: php-matrix_darwin_amd64.tar.gz
        TAG: ${{ inputs.version }}
        GH_TOKEN: ${{ inputs.github-token }}

    - name: Verify Attestation
      if: ${{ inputs.verify-attestation == 'true' }}
      run: gh attestation verify --repo typisttech/php-matrix php-matrix.tar.gz
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        GH_TOKEN: ${{ inputs.github-token }}

    - name: Unarchive the Binary
      run: |
        mkdir bin
        tar -xvf php-matrix.tar.gz -C ./bin php-matrix
      shell: bash
      working-directory: ${{ github.action_path }}

    - name: Add the binary into PATH
      run: echo "${ACTION_PATH}/bin" >> "$GITHUB_PATH"
      shell: bash
      env:
        ACTION_PATH: ${{ github.action_path }}

    - name: Generate Matrix
      id: generate-matrix
      run: |
        php-matrix composer --mode="${INPUT_MODE}" --source="${INPUT_SOURCE}" "${INPUT_COMPOSER_JSON}" > matrix 2>&1
        retVal=$?

        echo "::group::===> Matrix Output"
        cat matrix
        echo "::endgroup::"

        if [ $retVal -ne 0 ]; then
            echo "::error::Unable to generate matrix"
            exit 1
        fi

        {
            echo 'matrix<<EOF'
            cat matrix
            echo EOF
        } >> "$GITHUB_OUTPUT"
      shell: sh
      env:
        INPUT_COMPOSER_JSON: ${{ inputs.composer-json }}
        INPUT_MODE: ${{ inputs.mode }}
        INPUT_SOURCE: ${{ inputs.source }}

    - name: Print Info
      if: ${{ !cancelled() }}
      run: |
        echo "==> Setup PHP Matrix"
        echo -e "\033[32;m✓\033[0m \033[34;mphp-matrix\033[0m https://github.com/typisttech/php-matrix"
        echo "::group::$ php-matrix --version"
        php-matrix --version
        echo "::endgroup::"

        echo ""
        echo "==> Sponsor php-matrix-action"
        echo -e "\033[32;m✓\033[0m \033[34;mphp-matrix-action\033[0m https://github.com/sponsors/tangrufus"

        echo ""
        echo "==> Hire Tang Rufus"
        echo "I am looking for my next role, freelance or full-time."
        echo "If you find this tool useful, I can build you more dev tools like this."
        echo "Let's talk if you are hiring PHP / Ruby / Go developers."
        echo -e "\033[32;m✓\033[0m \033[34;mTang Rufus\033[0m https://typist.tech/contact"
      shell: bash
